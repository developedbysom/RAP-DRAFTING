managed;
define behavior for zdmo_I_Travel_D alias Travel
implementation in class zdmo_bp_i_travel_d unique
persistent table zdmo_a_travel_d
lock master
//authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;
  association _Booking { create; }
  field ( numbering : managed, readonly ) TravelUUID;
  internal action reCalcTotalPrice;
  field ( readonly ) TravelID, OverallStatus, TotalPrice;
  determination setTravelNumber on save { create; }
  determination setStatusToNew on modify { create; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  mapping for zdmo_a_travel_d
  { AgencyID = agency_id;
    BeginDate = begin_date;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    CustomerID = customer_id;
    Description = description;
    EndDate = end_date;
    LocalCreatedAt = local_created_at;
    LocalCreatedBy = local_created_by;
    LocalLastChangedAt = local_last_changed_at;
    LocalLastChangedBy = local_last_changed_by;
    OverallStatus = overall_status;
    TotalPrice = total_price;
    TravelID = travel_id;
    TravelUUID = travel_uuid; }
}
define behavior for zdmo_I_Booking_D alias Booking
implementation in class zdmo_bp_i_booking_d unique
persistent table zdmo_a_booking_d
lock dependent by _Travel
//authorization dependent by <association>
etag master LocalLastChangedAt
{
  update;
  delete;
  association _BookingSupplement { create; }
  association _Travel { }
  field ( readonly ) TravelUUID, BookingID, BookingDate, LocalLastChangedAt;
  field ( mandatory ) CustomerID, AirlineID, ConnectionID, FlightDate;
  field ( numbering : managed, readonly ) BookingUUID;
  //  internal action reCalcTotalPrice;
  determination setBookingNumber on modify { create; }
  determination setBookingDt on save { create; }
  determination calTotalPrice on modify { create; field FlightPrice, CurrencyCode; }

  mapping for zdmo_a_booking_d
  { AirlineID = carrier_id;
    BookingDate = booking_date;
    BookingID = booking_id;
    BookingStatus = booking_status;
    BookingUUID = booking_uuid;
    ConnectionID = connection_id;
    CurrencyCode = currency_code;
    CustomerID = customer_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    LocalLastChangedAt = local_last_changed_at;
    TravelUUID = parent_uuid; }
}
define behavior for zdmo_I_BookingSupplement_D alias BookingSupplement
implementation in class zdmo_bp_i_bookingsupplement_d unique
persistent table zdmo_a_bksuppl_d
lock dependent by _Travel
//authorization dependent by <association>
etag master LocalLastChangedAt
{
  update;
  delete;
  association _Travel { }
  field ( readonly ) TravelUUID,BookingSupplementID;
  field ( numbering : managed, readonly ) BookSupplUUID;
  determination setBookSupplNumber on save { create; }
  mapping for zdmo_a_bksuppl_d
  { BookSupplPrice = price;
    BookSupplUUID = booksuppl_uuid;
    BookingSupplementID = booking_supplement_id;
    BookingUUID = parent_uuid;
    CurrencyCode = currency_code;
    LocalLastChangedAt = local_last_changed_at;
    SupplementID = supplement_id;
    TravelUUID = root_uuid; }
}